#include <aLM335i.h>
int tempPin = A2; // temp input
int peltier1pin1 = 3; // peltier 1 logic pin 1
int peltier1pin2 = 4; // peltier 1 logic pin 2
int enablePin = 9; // pin 1 on L293D 
int power = 100; // power level from 0 to 100%
int peltier_level = map(power, 0, 100, 0, 255); // PWM value that is given to the enable pin
int cycle = 0;
float val = 0; //variable to store the value coming from the sensor
aLM335i tempsensor (A2);
const int numReadings = 10;
int readings[numReadings]; // the readings from the analog input
int index = 0; // the index of the current reading
int total = 0; // the running total
int average = 0; // the average
void setup() {
Serial.begin(9600);
pinMode(peltier1pin1, OUTPUT);
pinMode(peltier1pin2, OUTPUT);
pinMode(enablePin, OUTPUT);

//while(!Serial);
Serial.println("Power 0 to 100");
Serial.println();
// set enablePin high so that motor can turn on:
digitalWrite(enablePin, HIGH);

initAverage(); 
}
void initAverage() {
for (int thisReading = 0; thisReading < numReadings; thisReading++)
readings[thisReading] = 0; 
}
float doAverage(int inputPin) {
total= total - readings[index];
// read from the sensor: 
readings[index] = analogRead(inputPin); 
// add the reading to the total:
total= total + readings[index]; 
// advance to the next position in the array: 
index = index + 1; 
// if we're at the end of the array...
if (index >= numReadings) 
// ...wrap around to the beginning: 
index = 0; 
// calculate the average:
average = total / numReadings;
return average;
}
void loop() {

val = doAverage(tempPin); //analogRead(tempPin);
val = val * 0.48828125;
Serial.print("Power = ");
Serial.print(power);
Serial.print("%");
Serial.print("TEMPRATURE = ");
Serial.print(val);
Serial.print("*C");
Serial.println(val) ;
if (val > 26){ 
while ( cycle < 2 ){
digitalWrite(peltier1pin1, HIGH); // set pin 2 on L293D low
digitalWrite(peltier1pin2, LOW); // set pin 7 on L293D high
delay(200);
digitalWrite(peltier1pin1, LOW); // set pin 2 on L293D low
digitalWrite(peltier1pin2, LOW); // set pin 7 on L293D high
delay(300);
cycle++;
}
cycle = 0;
}
// if the switch is low, motor will turn in the opposite direction:
else {
while ( cycle < 2 ){
digitalWrite(peltier1pin1, LOW); // set pin 2 on L293D low
digitalWrite(peltier1pin2, HIGH); // set pin 7 on L293D high
delay(200);
digitalWrite(peltier1pin1, LOW); // set pin 2 on L293D low
digitalWrite(peltier1pin2, LOW); // set pin 7 on L293D high
delay(300);
cycle++;
}
cycle = 0;
}

// read desired peltier power 
// if(Serial.available() > 0)
// {
// power = Serial.parseInt();
//
// if(power > 100) power = 100;
// if(power < 0) power = 0;
//
// 
// }
peltier_level = map(power, 0, 100, 0, 255);
// Write value to peltier!
analogWrite(enablePin, peltier_level);

}
